//File generated by vaweei CLI
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { PSYCHOTHERAPY } from 'src/app/utils/setup/routes.enum';

//SERVICE
import { BackendService } from 'src/app/services/backend.service';
import { HeaderService } from 'src/app/services/header.service';
import { UtilService } from 'src/app/services/util.service';

//MODELS
import { Hobbies_Interest } from 'src/app/models/hobbies_interest.model';


import {SelectionModel} from '@angular/cdk/collections';
import {MatTableDataSource} from '@angular/material/table';
import { animate, state, style, transition, trigger } from '@angular/animations';

@Component({
  selector: 'app-tracking-list-view',
  templateUrl: './tracking-list-view.component.html',
  styleUrls: ['./tracking-list-view.component.scss'],
  animations: [
    trigger('detailExpand', [
      state('collapsed', style({height: '0px', minHeight: '0'})),
      state('expanded', style({height: '*'})),
      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),
    ]),
  ],
})
export class TrackingListViewComponent implements OnInit {

  generalColumns = ['patient_name'];
  secundaryColumns = ['session_objective', 'session_approach', 'created_at'];
  expandedElement: any | null;
  dataSource = new MatTableDataSource<any>([]);

  $headerAction!: Subscription;

  constructor(
    private router : Router,
    private route: ActivatedRoute,
    private headerService : HeaderService,
    private backendService : BackendService,
    private utilService: UtilService
    ) {}

  ngAfterViewInit(): void {
    this.$headerAction! = this.headerService.getOutAction().subscribe(data => {
      switch (data.action) {
        case 'delete':
          this.delete();
          break;
      
        default:
          break;
      }
    });
  }

  ngOnInit(): void {
    if(this.route.snapshot.paramMap.get('patient_id')){
      this.getByPatient(this.route.snapshot.paramMap.get('patient_id'));
    }else{
      this.getAll();
    }
    
    this.headerService.setHeader({name:'tracking',type:'list'});
    this.utilService.set({name:'tracking', type:'list'});
  }

  getAll(){
    this.backendService.getAll(PSYCHOTHERAPY.TRACKING,{}).subscribe({
     next: (v) => { this.dataSource.data = v;
      this.group_by(['patient']);
      },
     error: (e) => console.error(e),
     complete: () => console.info('complete')
   });
  }

  getByPatient(patient_id:any){
    this.backendService.getOneById(PSYCHOTHERAPY.TRACKING_BY_PATIENT, patient_id).subscribe({
      next: (v) => { this.dataSource.data = v;
       },
      error: (e) => console.error(e),
      complete: () => console.info('complete')
    });
  }

  show(track:any){
    this.router.navigate(['main','psychotherapy','tracking','form',track.id]);
  }

  delete(){
    // this.hobbiesInterestService.deleteHobbiesInterests(this.selection.selected.map(function(hobbies_interest){return hobbies_interest.id})).subscribe({
    //   next: (v) => { console.log(v) },
    //   error: (e) => console.error(e),
    //   complete: () => this.getAll()
    // });
  }

  group_by(options:any[]){

    let grouped_list: any[] = []

    this.dataSource.data.forEach(opt => {
      if ( grouped_list.find( (item) => {return item.patient_name == opt.patient_name}) == undefined) {
        grouped_list.push({
          'patient_name': opt.patient_name,
          'children': [opt]
        });
      }else{
        grouped_list.map(item => 
          {
            if(item.patient_name == opt.patient_name){
              item.children.push(opt);
              return item;
            }else{
              return item;
            }
          }  
        )
      }
    });

    this.dataSource.data = grouped_list;

  }

}
    