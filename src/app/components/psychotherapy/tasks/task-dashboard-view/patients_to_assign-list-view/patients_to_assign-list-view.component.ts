//File generated by vaweei CLI
import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs';

import { MatDialog } from '@angular/material/dialog';
import { NgxSpinnerService } from 'ngx-spinner';

import { PSYCHOTHERAPY } from 'src/app/utils/setup/routes.enum';

//COMPONENTS
import  { AssignTaskModalViewComponent } from 'src/app/components/psychotherapy/tasks/task-dashboard-view/assign_task-modal-view/assign_task-modal-view.component';
import { GenericSnackbarComponent } from 'src/app/utils/components/generic_snackbar/generic_snackbar.component';

//SERVICE
import { BackendService } from 'src/app/services/backend.service';
import { UtilService } from 'src/app/services/util.service';

//MODELS
import { Patient } from 'src/app/models/psychotherapy.model';
import {SelectionModel} from '@angular/cdk/collections';
import {MatTableDataSource} from '@angular/material/table';

@Component({
  selector: 'app-patients_to_assign-list-view',
  templateUrl: './patients_to_assign-list-view.component.html',
  styleUrls: ['./patients_to_assign-list-view.component.scss']
})
export class PatientsToAssignListViewComponent implements OnInit {

  displayedColumns = ['image', 'first_name', 'phone_number', 'email', 'option'];
  dataSource = new MatTableDataSource<Patient>([]);
  searchAttributes : any[] = ['first_name', 'email']

  $headerAction!: Subscription;
  $advanceSearch!: Subscription;

  constructor(
    private backendService : BackendService,
    public dialog: MatDialog,
    private spinner: NgxSpinnerService,
    private utilService: UtilService
    ) {}

  ngAfterViewInit(): void {

  }

  ngOnInit(): void {
    this.getAll();
  }

  getAll(){
    this.spinner.show('loading-patients-to-assign')
    this.backendService.getAll(PSYCHOTHERAPY.PATIENTS_TASKS_ASSIGNED,{}).subscribe({
      next: (v) => { 
        this.dataSource.data = v.filter((patient: { tasks: any[]; }) => patient.tasks.length == 0) 
      },
      error: (e) => console.error(e),
      complete: () => this.spinner.hide('loading-patients-to-assign')
   });
  }

  openDialog(patient: any) {
    const dialogRef = this.dialog.open(
      AssignTaskModalViewComponent,{
        data: {id: patient.id},
        width: "25%",
        enterAnimationDuration: "300ms",
        exitAnimationDuration: "100ms",
        maxHeight: "100%"
      }
    );

    dialogRef.afterClosed().subscribe(result => {
      console.log(`Dialog result: ${result}`);
      this.getAll();
      this.utilService.setPatientTaskAssigned({status: 200});
    });

  }

  setSearchAttributes(attributes: any){
    console.log(attributes);
    
  }

}
    