//File generated by vaweei CLI
import { Component, OnInit, AfterContentInit, OnDestroy } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Subscription } from 'rxjs';

//SERVICE
import { HeaderService } from 'src/app/services/header.service';
import { HobbiesInterestService } from 'src/app/services/catalogs/hobbies_interest.service';
import { UtilService } from 'src/app/services/util.service';

//MODELS
import { Hobbies_Interest } from 'src/app/models/hobbies_interest.model';

import {NgbModal, ModalDismissReasons, NgbModalOptions} from '@ng-bootstrap/ng-bootstrap';

import {SelectionModel} from '@angular/cdk/collections';
import {MatTableDataSource} from '@angular/material/table';

import { SupportNetworkFormModalComponent } from 'src/app/components/clinical_history/basic_clinical_history/support_network/support_network-form-modal/support_network-form-modal.component';

@Component({
  selector: 'app-support_network-list-view',
  templateUrl: './support_network-list-view.component.html',
  styleUrls: ['./support_network-list-view.component.scss']
})
export class SupportNetworkListViewComponent implements OnInit, AfterContentInit, OnDestroy {

  $suscribeUtil!: Subscription;

  displayedColumns = ['select' , 'code' , 'name'  ];
  dataSource = new MatTableDataSource<Hobbies_Interest>([]);
  selection = new SelectionModel<Hobbies_Interest>(true, []);
  data2save : any[]= []
  closeResult = '';

  area1 : any[] = []
  area2 : any[] = []
  area3 : any[] = []
  area4 : any[] = []


  constructor(
    private router : Router,
    private headerService : HeaderService,
    private hobbiesInterestService : HobbiesInterestService,
    private utilService: UtilService,
    private modalService: NgbModal
    ) {}

  ngOnDestroy(): void {
    this.$suscribeUtil.unsubscribe()
  }

  ngAfterContentInit(): void {
    this.$suscribeUtil = this.utilService.getNetworkArea().subscribe(val => {
      switch (val.area) {
        case 1:
          this.area1.push(val.data)
          this.data2save.push({...val.data, area: 1})
          break;
        case 2:
          this.area2.push(val.data)
          this.data2save.push({...val.data, area: 2})
        break;
        case 3:
          this.area3.push(val.data)
          this.data2save.push({...val.data, area: 3})
        break;
        case 4:
          this.area4.push(val.data)
          this.data2save.push({...val.data, area: 4})
        break;      
        default:
          break;
      }

      this.utilService.setSupportNetworkClinicalNote(this.data2save);
    })

  }

  ngOnInit(): void {
  }



   addAreaSupport(type:number){
    let modal_setup: NgbModalOptions = {
      ariaLabelledBy: 'modal-basic-title',
      windowClass: 'sm'      
    }
    const modalRef : any = this.modalService.open(SupportNetworkFormModalComponent, modal_setup)
     switch (type) {
      case 1:
        modalRef.componentInstance.modalConfigParent = {
          title: 'Área Familiar',
          area: 1
        };
        break;
      case 2:
        modalRef.componentInstance.modalConfigParent = {
          title: 'Área Escolar',
          area: 2
        };
        break;
      case 3:
        modalRef.componentInstance.modalConfigParent = {
          title: 'Área Laboral',
          area: 3
        };
        break;
      case 4:
        modalRef.componentInstance.modalConfigParent = {
          title: 'Área Social',
          area: 4
        };
        break;
       default:
         break;
     }

 
    
    
    //   .result.then((result) => {
    //   this.closeResult = `Closed with: ${result}`;
    // }, (reason) => {
    //   this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;
    // });

    
    // modalRef.componentInstance.passEntry.subscribe((receivedEntry) => {console.log(receivedEntry);
    // })

   } 

   private getDismissReason(reason: any): string {
    if (reason === ModalDismissReasons.ESC) {
      return 'by pressing ESC';
    } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {
      return 'by clicking on a backdrop';
    } else {
      return `with: ${reason}`;
    }
  }

}
    